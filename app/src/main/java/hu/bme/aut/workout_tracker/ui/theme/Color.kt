package hu.bme.aut.workout_tracker.ui.theme

import androidx.compose.material3.ColorScheme
import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.runtime.Composable
import androidx.compose.runtime.ReadOnlyComposable
import androidx.compose.runtime.staticCompositionLocalOf
import androidx.compose.ui.graphics.Color

data class WorkoutTrackerColors(

    val mdThemeLightPrimary: Color = Color(0xFF335CA8),
    val mdThemeLightOnPrimary: Color = Color(0xFFFFFFFF),
    val mdThemeLightPrimaryContainer: Color = Color(0xFFD8E2FF),
    val mdThemeLightOnPrimaryContainer: Color = Color(0xFF001A42),
    val mdThemeLightSecondary: Color = Color(0xFF385BA9),
    val mdThemeLightOnSecondary: Color = Color(0xFFFFFFFF),
    val mdThemeLightSecondaryContainer: Color = Color(0xFFDAE2FF),
    val mdThemeLightOnSecondaryContainer: Color = Color(0xFF001946),
    val mdThemeLightTertiary: Color = Color(0xFF3A5BA9),
    val mdThemeLightOnTertiary: Color = Color(0xFFFFFFFF),
    val mdThemeLightTertiaryContainer: Color = Color(0xFFDAE2FF),
    val mdThemeLightOnTertiaryContainer: Color = Color(0xFF001847),
    val mdThemeLightError: Color = Color(0xFFBA1A1A),
    val mdThemeLightErrorContainer: Color = Color(0xFFFFDAD6),
    val mdThemeLightOnError: Color = Color(0xFFFFFFFF),
    val mdThemeLightOnErrorContainer: Color = Color(0xFF410002),
    val mdThemeLightBackground: Color = Color(0xFFF8FDFF),
    val mdThemeLightOnBackground: Color = Color(0xFF001F25),
    val mdThemeLightSurface: Color = Color(0xFFF8FDFF),
    val mdThemeLightOnSurface: Color = Color(0xFF001F25),
    val mdThemeLightSurfaceVariant: Color = Color(0xFFE1E2EC),
    val mdThemeLightOnSurfaceVariant: Color = Color(0xFF44474F),
    val mdThemeLightOutline: Color = Color(0xFF75777F),
    val mdThemeLightInverseOnSurface: Color = Color(0xFFD6F6FF),
    val mdThemeLightInverseSurface: Color = Color(0xFF00363F),
    val mdThemeLightInversePrimary: Color = Color(0xFFAEC6FF),
    val mdThemeLightShadow: Color = Color(0xFF000000),
    val mdThemeLightSurfaceTint: Color = Color(0xFF335CA8),
    val mdThemeLightOutlineVariant: Color = Color(0xFFC5C6D0),
    val mdThemeLightScrim: Color = Color(0xFF000000),

    val mdThemeDarkPrimary: Color = Color(0xFFAEC6FF),
    val mdThemeDarkOnPrimary: Color = Color(0xFF002E6B),
    val mdThemeDarkPrimaryContainer: Color = Color(0xFF12448F),
    val mdThemeDarkOnPrimaryContainer: Color = Color(0xFFD8E2FF),
    val mdThemeDarkSecondary: Color = Color(0xFFB1C5FF),
    val mdThemeDarkOnSecondary: Color = Color(0xFF002C70),
    val mdThemeDarkSecondaryContainer: Color = Color(0xFF1B438F),
    val mdThemeDarkOnSecondaryContainer: Color = Color(0xFFDAE2FF),
    val mdThemeDarkTertiary: Color = Color(0xFFB2C5FF),
    val mdThemeDarkOnTertiary: Color = Color(0xFF002C72),
    val mdThemeDarkTertiaryContainer: Color = Color(0xFF1D438F),
    val mdThemeDarkOnTertiaryContainer: Color = Color(0xFFDAE2FF),
    val mdThemeDarkError: Color = Color(0xFFFFB4AB),
    val mdThemeDarkErrorContainer: Color = Color(0xFF93000A),
    val mdThemeDarkOnError: Color = Color(0xFF690005),
    val mdThemeDarkOnErrorContainer: Color = Color(0xFFFFDAD6),
    val mdThemeDarkBackground: Color = Color(0xFF001F25),
    val mdThemeDarkOnBackground: Color = Color(0xFFA6EEFF),
    val mdThemeDarkSurface: Color = Color(0xFF001F25),
    val mdThemeDarkOnSurface: Color = Color(0xFFA6EEFF),
    val mdThemeDarkSurfaceVariant: Color = Color(0xFF44474F),
    val mdThemeDarkOnSurfaceVariant: Color = Color(0xFFC5C6D0),
    val mdThemeDarkOutline: Color = Color(0xFF8E9099),
    val mdThemeDarkInverseOnSurface: Color = Color(0xFF001F25),
    val mdThemeDarkInverseSurface: Color = Color(0xFFA6EEFF),
    val mdThemeDarkInversePrimary: Color = Color(0xFF335CA8),
    val mdThemeDarkShadow: Color = Color(0xFF000000),
    val mdThemeDarkSurfaceTint: Color = Color(0xFFAEC6FF),
    val mdThemeDarkOutlineVariant: Color = Color(0xFF44474F),
    val mdThemeDarkScrim: Color = Color(0xFF000000),


    val gold: Color = Color(0xFFFFD700),
    val silver: Color = Color(0xFFC0C0C0),
    val bronze: Color = Color(0xFFCD7F32),

    val darkColorScheme: ColorScheme = darkColorScheme(
        primary = mdThemeDarkPrimary,
        onPrimary = mdThemeDarkOnPrimary,
        primaryContainer = mdThemeDarkPrimaryContainer,
        onPrimaryContainer = mdThemeDarkOnPrimaryContainer,
        secondary = mdThemeDarkSecondary,
        onSecondary = mdThemeDarkOnSecondary,
        secondaryContainer = mdThemeDarkSecondaryContainer,
        onSecondaryContainer = mdThemeDarkOnSecondaryContainer,
        tertiary = mdThemeDarkTertiary,
        onTertiary = mdThemeDarkOnTertiary,
        tertiaryContainer = mdThemeDarkTertiaryContainer,
        onTertiaryContainer = mdThemeDarkOnTertiaryContainer,
        error = mdThemeDarkError,
        errorContainer = mdThemeDarkErrorContainer,
        onError = mdThemeDarkOnError,
        onErrorContainer = mdThemeDarkOnErrorContainer,
        background = mdThemeDarkBackground,
        onBackground = mdThemeDarkOnBackground,
        surface = mdThemeDarkSurface,
        onSurface = mdThemeDarkOnSurface,
        surfaceVariant = mdThemeDarkSurfaceVariant,
        onSurfaceVariant = mdThemeDarkOnSurfaceVariant,
        outline = mdThemeDarkOutline,
        inverseOnSurface = mdThemeDarkInverseOnSurface,
        inverseSurface = mdThemeDarkInverseSurface,
        inversePrimary = mdThemeDarkInversePrimary,
        surfaceTint = mdThemeDarkSurfaceTint,
        outlineVariant = mdThemeDarkOutlineVariant,
        scrim = mdThemeDarkScrim,

        ),

    val lightColorScheme: ColorScheme = lightColorScheme(
        primary = mdThemeLightPrimary,
        onPrimary = mdThemeLightOnPrimary,
        primaryContainer = mdThemeLightPrimaryContainer,
        onPrimaryContainer = mdThemeLightOnPrimaryContainer,
        secondary = mdThemeLightSecondary,
        onSecondary = mdThemeLightOnSecondary,
        secondaryContainer = mdThemeLightSecondaryContainer,
        onSecondaryContainer = mdThemeLightOnSecondaryContainer,
        tertiary = mdThemeLightTertiary,
        onTertiary = mdThemeLightOnTertiary,
        tertiaryContainer = mdThemeLightTertiaryContainer,
        onTertiaryContainer = mdThemeLightOnTertiaryContainer,
        error = mdThemeLightError,
        errorContainer = mdThemeLightErrorContainer,
        onError = mdThemeLightOnError,
        onErrorContainer = mdThemeLightOnErrorContainer,
        background = mdThemeLightBackground,
        onBackground = mdThemeLightOnBackground,
        surface = mdThemeLightSurface,
        onSurface = mdThemeLightOnSurface,
        surfaceVariant = mdThemeLightSurfaceVariant,
        onSurfaceVariant = mdThemeLightOnSurfaceVariant,
        outline = mdThemeLightOutline,
        inverseOnSurface = mdThemeLightInverseOnSurface,
        inverseSurface = mdThemeLightInverseSurface,
        inversePrimary = mdThemeLightInversePrimary,
        surfaceTint = mdThemeLightSurfaceTint,
        outlineVariant = mdThemeLightOutlineVariant,
        scrim = mdThemeLightScrim,
    )
)

val LocalColors = staticCompositionLocalOf { WorkoutTrackerColors() }

val workoutTrackerColors: WorkoutTrackerColors
    @Composable
    @ReadOnlyComposable
    get() = staticCompositionLocalOf { WorkoutTrackerColors() }.current